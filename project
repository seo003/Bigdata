{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOL+uX/Umrtx08fwJArjghB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# 구글 드라이브 마운트\n","from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"18J6aizY85EO","executionInfo":{"status":"ok","timestamp":1729478559645,"user_tz":-540,"elapsed":2317,"user":{"displayName":"김서영[컴퓨터정보공학과]","userId":"17082374619857425401"}},"outputId":"a0bc1cf7-553f-41d8-d37a-b253de91aff8"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2dPzLjdgqfee","executionInfo":{"status":"ok","timestamp":1729478481975,"user_tz":-540,"elapsed":13936,"user":{"displayName":"김서영[컴퓨터정보공학과]","userId":"17082374619857425401"}},"outputId":"0679d92e-7f58-4aa8-8300-e294c6484520"},"outputs":[{"output_type":"stream","name":"stdout","text":["검색어를 입력하세요: 축제\n","[2024-10-21 02:41:11.302219] Url Request Success\n","[2024-10-21 02:41:12.264658] Url Request Success\n","[2024-10-21 02:41:13.227565] Url Request Success\n","[2024-10-21 02:41:14.231363] Url Request Success\n","[2024-10-21 02:41:15.234091] Url Request Success\n","[2024-10-21 02:41:16.424795] Url Request Success\n","[2024-10-21 02:41:17.393648] Url Request Success\n","[2024-10-21 02:41:18.398142] Url Request Success\n","[2024-10-21 02:41:19.401115] Url Request Success\n","[2024-10-21 02:41:20.604410] Url Request Success\n","HTTP Error 400: Bad Request\n","[2024-10-21 02:41:21.333455] Error for URL : https://openapi.naver.com/v1/search/news.json?query=%EC%B6%95%EC%A0%9C&start=1001&display=100\n","전체 검색 : 4115781 건\n","가져온 데이터 : 1000 건\n","축제_naver_news.json SAVED\n"]}],"source":["import os\n","import sys\n","import urllib.request\n","import datetime\n","import time\n","import json\n","\n","# 클라이언트 ID와 비밀번호를 JSON 파일에서 읽어오기\n","def load_client_credentials(filename='/content/drive/MyDrive/Colab Notebooks/project/bigdata/naver_client.json'):\n","    with open(filename, 'r') as f:\n","        credentials = json.load(f)\n","    return credentials['client_id'], credentials['client_secret']\n","\n","# 클라이언트 ID와 비밀번호 로드\n","client_id, client_secret = load_client_credentials()\n","\n","\n","#[CODE 1]\n","def getRequestUrl(url):\n","    req = urllib.request.Request(url)\n","    req.add_header(\"X-Naver-Client-Id\", client_id)\n","    req.add_header(\"X-Naver-Client-Secret\", client_secret)\n","\n","    try:\n","        response = urllib.request.urlopen(req)\n","        if response.getcode() == 200:\n","            print (\"[%s] Url Request Success\" % datetime.datetime.now())\n","            return response.read().decode('utf-8')\n","    except Exception as e:\n","        print(e)\n","        print(\"[%s] Error for URL : %s\" % (datetime.datetime.now(), url))\n","        return None\n","\n","#[CODE 2]\n","def getNaverSearch(node, srcText, start, display):\n","    base = \"https://openapi.naver.com/v1/search\"\n","    node = \"/%s.json\" % node\n","    parameters = \"?query=%s&start=%s&display=%s\" % (urllib.parse.quote(srcText), start, display)\n","\n","    url = base + node + parameters\n","    responseDecode = getRequestUrl(url)   #[CODE 1]\n","\n","    if (responseDecode == None):\n","        return None\n","    else:\n","        return json.loads(responseDecode)\n","\n","#[CODE 3]\n","def getPostData(post, jsonResult, cnt):\n","    title = post['title']\n","    description = post['description']\n","    org_link = post['originallink']\n","    link = post['link']\n","\n","    pDate = datetime.datetime.strptime(post['pubDate'],  '%a, %d %b %Y %H:%M:%S +0900')\n","    pDate = pDate.strftime('%Y-%m-%d %H:%M:%S')\n","\n","    jsonResult.append({'cnt':cnt, 'title':title, 'description': description, 'org_link':org_link,   'link': org_link,   'pDate':pDate})\n","    return\n","\n","#[CODE 0]\n","def main():\n","    node = 'news'   # 크롤링 할 대상\n","    srcText = input('검색어를 입력하세요: ')\n","    cnt = 0\n","    jsonResult = []\n","\n","    jsonResponse = getNaverSearch(node, srcText, 1, 100)  #[CODE 2]\n","    total = jsonResponse['total']\n","\n","    while ((jsonResponse != None) and (jsonResponse['display'] != 0)):\n","        for post in jsonResponse['items']:\n","            cnt += 1\n","            getPostData(post, jsonResult, cnt)  #[CODE 3]\n","\n","        start = jsonResponse['start'] + jsonResponse['display']\n","        jsonResponse = getNaverSearch(node, srcText, start, 100)  #[CODE 2]\n","\n","    print('전체 검색 : %d 건' %total)\n","\n","    output_file = '/content/drive/MyDrive/Colab Notebooks/project/bigdata/%s_naver_%s.json' % (srcText, node)\n","\n","    with open(output_file, 'w', encoding='utf8') as outfile:\n","        jsonFile = json.dumps(jsonResult,  indent=4, sort_keys=True,  ensure_ascii=False)\n","        outfile.write(jsonFile)\n","\n","\n","    print(\"가져온 데이터 : %d 건\" %(cnt))\n","    print ('%s_naver_%s.json SAVED' % (srcText, node))\n","\n","if __name__ == '__main__':\n","    main()\n"]}]}